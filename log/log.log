[2025-07-30 00:33:43,799] [INFO] 执行用例: 1 - 正常请求-简单问题
[2025-07-30 00:33:43,801] [INFO] 请求地址: http://localhost:8688/api/chatGatWay-internal
[2025-07-30 00:33:43,801] [INFO] 请求参数: {'message': '你好，今天天气怎么样？', 'user_id': 'user001'}
[2025-07-30 00:33:48,585] [INFO] 执行用例: 2 - 异常请求-缺少message参数
[2025-07-30 00:33:48,585] [INFO] 请求地址: http://localhost:8688/api/chatGatWay-internal
[2025-07-30 00:33:48,585] [INFO] 请求参数: {'user_id': 'user002'}
[2025-07-30 00:33:53,101] [INFO] 执行用例: 3 - 正常请求-英文问题
[2025-07-30 00:33:53,102] [INFO] 请求地址: http://localhost:8688/api/chatGatWay-internal
[2025-07-30 00:33:53,102] [INFO] 请求参数: {'message': 'What is the capital of France?', 'user_id': 'user003'}
[2025-07-30 00:36:34,436] [INFO] 执行用例: 1 - 正常请求-简单问题
[2025-07-30 00:36:34,437] [INFO] 请求地址: http://localhost:8688/api/chatGatWay-internal
[2025-07-30 00:36:34,438] [INFO] 请求参数: {'message': '你好，今天天气怎么样？', 'user_id': 'user001'}
[2025-07-30 00:36:39,147] [INFO] 执行用例: 2 - 异常请求-缺少message参数
[2025-07-30 00:36:39,148] [INFO] 请求地址: http://localhost:8688/api/chatGatWay-internal
[2025-07-30 00:36:39,148] [INFO] 请求参数: {'user_id': 'user002'}
[2025-07-30 00:36:43,676] [INFO] 执行用例: 3 - 正常请求-英文问题
[2025-07-30 00:36:43,676] [INFO] 请求地址: http://localhost:8688/api/chatGatWay-internal
[2025-07-30 00:36:43,677] [INFO] 请求参数: {'message': 'What is the capital of France?', 'user_id': 'user003'}
[2025-07-30 00:36:48,184] [ERROR] JSON解析失败: {\key\": \"value1\"}", 错误: Expecting property name enclosed in double quotes: line 1 column 2 (char 1)
[2025-07-30 00:36:48,185] [ERROR] 清理后仍无法解析JSON: {key": "value1"}"
[2025-07-30 00:36:48,185] [ERROR] JSON解析失败: {\args\": {\"key\": \"value1\"}}", 错误: Expecting property name enclosed in double quotes: line 1 column 2 (char 1)
[2025-07-30 00:36:48,186] [ERROR] 清理后仍无法解析JSON: {args": {"key": "value1"}}"
[2025-07-30 00:36:48,187] [INFO] 执行用例: 1 - 测试GET请求
[2025-07-30 00:36:48,187] [INFO] 请求地址: https://httpbin.org/get
[2025-07-30 00:36:48,190] [INFO] 请求参数: {}
[2025-07-30 00:36:50,312] [ERROR] JSON解析失败: {\key\": \"value2\"}", 错误: Expecting property name enclosed in double quotes: line 1 column 2 (char 1)
[2025-07-30 00:36:50,313] [ERROR] 清理后仍无法解析JSON: {key": "value2"}"
[2025-07-30 00:36:50,314] [ERROR] JSON解析失败: {\json\": {\"key\": \"value2\"}}", 错误: Expecting property name enclosed in double quotes: line 1 column 2 (char 1)
[2025-07-30 00:36:50,314] [ERROR] 清理后仍无法解析JSON: {json": {"key": "value2"}}"
[2025-07-30 00:36:50,314] [INFO] 执行用例: 2 - 测试POST请求
[2025-07-30 00:36:50,315] [INFO] 请求地址: https://httpbin.org/post
[2025-07-30 00:36:50,315] [INFO] 请求参数: {}
[2025-07-30 00:36:52,319] [ERROR] JSON解析失败: {\foo\": \"bar\"}", 错误: Expecting property name enclosed in double quotes: line 1 column 2 (char 1)
[2025-07-30 00:36:52,319] [ERROR] 清理后仍无法解析JSON: {foo": "bar"}"
[2025-07-30 00:36:52,320] [ERROR] JSON解析失败: {\args\": {\"foo\": \"bar\"}}" , 错误: Expecting property name enclosed in double quotes: line 1 column 2 (char 1)
[2025-07-30 00:36:52,321] [ERROR] 清理后仍无法解析JSON: {args": {"foo": "bar"}}" 
[2025-07-30 00:36:52,321] [INFO] 执行用例: 3 - 测试带参数GET
[2025-07-30 00:36:52,321] [INFO] 请求地址: https://httpbin.org/get
[2025-07-30 00:36:52,322] [INFO] 请求参数: {}
[2025-07-30 00:36:54,902] [INFO] 接口返回: {'args': {}, 'headers': {'Accept': '*/*', 'Accept-Encoding': 'gzip, deflate', 'Host': 'httpbin.org', 'User-Agent': 'python-requests/2.32.4', 'X-Amzn-Trace-Id': 'Root=1-6888f8a5-36d08cfd7530f86349117c5c'}, 'origin': '139.227.195.146', 'url': 'https://httpbin.org/get'}
[2025-07-30 00:38:25,457] [INFO] 执行用例: 1 - 正常请求-简单问题
[2025-07-30 00:38:25,458] [INFO] 请求地址: http://localhost:8688/api/chatGatWay-internal
[2025-07-30 00:38:25,459] [INFO] 请求参数: {'message': '你好，今天天气怎么样？', 'user_id': 'user001'}
[2025-07-30 00:38:30,212] [INFO] 执行用例: 2 - 异常请求-缺少message参数
[2025-07-30 00:38:30,213] [INFO] 请求地址: http://localhost:8688/api/chatGatWay-internal
[2025-07-30 00:38:30,213] [INFO] 请求参数: {'user_id': 'user002'}
[2025-07-30 00:38:34,693] [INFO] 执行用例: 3 - 正常请求-英文问题
[2025-07-30 00:38:34,694] [INFO] 请求地址: http://localhost:8688/api/chatGatWay-internal
[2025-07-30 00:38:34,694] [INFO] 请求参数: {'message': 'What is the capital of France?', 'user_id': 'user003'}
[2025-07-30 00:38:39,222] [INFO] 执行用例: 1 - 测试GET请求
[2025-07-30 00:38:39,222] [INFO] 请求地址: https://httpbin.org/get
[2025-07-30 00:38:39,223] [INFO] 请求参数: {'key': 'value1'}
[2025-07-30 00:38:41,925] [INFO] 接口返回: {'args': {'key': 'value1'}, 'headers': {'Accept': '*/*', 'Accept-Encoding': 'gzip, deflate', 'Host': 'httpbin.org', 'User-Agent': 'python-requests/2.32.4', 'X-Amzn-Trace-Id': 'Root=1-6888f910-7c6b68ef477987e211228fe5'}, 'origin': '139.227.195.146', 'url': 'https://httpbin.org/get?key=value1'}
[2025-07-30 00:38:41,934] [INFO] 执行用例: 2 - 测试POST请求
[2025-07-30 00:38:41,935] [INFO] 请求地址: https://httpbin.org/post
[2025-07-30 00:38:41,935] [INFO] 请求参数: {'key': 'value2'}
[2025-07-30 00:38:43,602] [INFO] 接口返回: {'args': {}, 'data': '{"key": "value2"}', 'files': {}, 'form': {}, 'headers': {'Accept': '*/*', 'Accept-Encoding': 'gzip, deflate', 'Content-Length': '17', 'Content-Type': 'application/json', 'Host': 'httpbin.org', 'User-Agent': 'python-requests/2.32.4', 'X-Amzn-Trace-Id': 'Root=1-6888f913-794723183aa11a9f451bc168'}, 'json': {'key': 'value2'}, 'origin': '139.227.195.146', 'url': 'https://httpbin.org/post'}
[2025-07-30 00:38:43,614] [INFO] 执行用例: 3 - 测试带参数GET
[2025-07-30 00:38:43,615] [INFO] 请求地址: https://httpbin.org/get
[2025-07-30 00:38:43,615] [INFO] 请求参数: {'foo': 'bar'}
[2025-07-30 00:38:44,813] [INFO] 接口返回: {'args': {'foo': 'bar'}, 'headers': {'Accept': '*/*', 'Accept-Encoding': 'gzip, deflate', 'Host': 'httpbin.org', 'User-Agent': 'python-requests/2.32.4', 'X-Amzn-Trace-Id': 'Root=1-6888f915-1aa7a321304092f46fb3817f'}, 'origin': '139.227.195.146', 'url': 'https://httpbin.org/get?foo=bar'}
[2025-07-30 10:57:11,570] [INFO] 执行用例: 1 - 正常请求-简单问题
[2025-07-30 10:57:11,570] [INFO] 请求地址: http://localhost:8688/api/chatGatWay-internal
[2025-07-30 10:57:11,571] [INFO] 请求参数: {'message': '你好，今天天气怎么样？', 'user_id': 'user001'}
[2025-07-30 10:57:16,124] [INFO] 执行用例: 2 - 异常请求-缺少message参数
[2025-07-30 10:57:16,124] [INFO] 请求地址: http://localhost:8688/api/chatGatWay-internal
[2025-07-30 10:57:16,124] [INFO] 请求参数: {'user_id': 'user002'}
[2025-07-30 10:57:20,327] [INFO] 执行用例: 3 - 正常请求-英文问题
[2025-07-30 10:57:20,327] [INFO] 请求地址: http://localhost:8688/api/chatGatWay-internal
[2025-07-30 10:57:20,328] [INFO] 请求参数: {'message': 'What is the capital of France?', 'user_id': 'user003'}
[2025-07-30 10:57:24,551] [INFO] 执行用例: 1 - 测试GET请求
[2025-07-30 10:57:24,551] [INFO] 请求地址: https://httpbin.org/get
[2025-07-30 10:57:24,551] [INFO] 请求参数: {'key': 'value1'}
[2025-07-30 10:57:28,320] [INFO] 接口返回: {'args': {'key': 'value1'}, 'headers': {'Accept': '*/*', 'Accept-Encoding': 'gzip, deflate', 'Host': 'httpbin.org', 'User-Agent': 'python-requests/2.32.4', 'X-Amzn-Trace-Id': 'Root=1-688988d4-690c8140530625d728242e73'}, 'origin': '58.247.23.136', 'url': 'https://httpbin.org/get?key=value1'}
[2025-07-30 10:57:28,325] [INFO] 执行用例: 2 - 测试POST请求
[2025-07-30 10:57:28,325] [INFO] 请求地址: https://httpbin.org/post
[2025-07-30 10:57:28,326] [INFO] 请求参数: {'key': 'value2'}
[2025-07-30 10:57:29,464] [INFO] 接口返回: {'args': {}, 'data': '{"key": "value2"}', 'files': {}, 'form': {}, 'headers': {'Accept': '*/*', 'Accept-Encoding': 'gzip, deflate', 'Content-Length': '17', 'Content-Type': 'application/json', 'Host': 'httpbin.org', 'User-Agent': 'python-requests/2.32.4', 'X-Amzn-Trace-Id': 'Root=1-688988d8-5da50c9c1b9023806eee0ae1'}, 'json': {'key': 'value2'}, 'origin': '58.247.23.136', 'url': 'https://httpbin.org/post'}
[2025-07-30 10:57:29,469] [INFO] 执行用例: 3 - 测试带参数GET
[2025-07-30 10:57:29,469] [INFO] 请求地址: https://httpbin.org/get
[2025-07-30 10:57:29,470] [INFO] 请求参数: {'foo': 'bar'}
[2025-07-30 10:57:30,589] [INFO] 接口返回: {'args': {'foo': 'bar'}, 'headers': {'Accept': '*/*', 'Accept-Encoding': 'gzip, deflate', 'Host': 'httpbin.org', 'User-Agent': 'python-requests/2.32.4', 'X-Amzn-Trace-Id': 'Root=1-688988d9-35e652892b7ad7726a86a056'}, 'origin': '58.247.23.136', 'url': 'https://httpbin.org/get?foo=bar'}
[2025-07-30 11:00:42,794] [INFO] 执行用例: 1 - 正常请求-简单问题
[2025-07-30 11:00:42,795] [INFO] 请求地址: http://localhost:8688/api/chatGatWay-internal
[2025-07-30 11:00:42,798] [INFO] 请求参数: {'message': '你好，今天天气怎么样？', 'user_id': 'user001'}
[2025-07-30 11:00:47,349] [INFO] 执行用例: 2 - 异常请求-缺少message参数
[2025-07-30 11:00:47,349] [INFO] 请求地址: http://localhost:8688/api/chatGatWay-internal
[2025-07-30 11:00:47,349] [INFO] 请求参数: {'user_id': 'user002'}
[2025-07-30 11:00:51,722] [INFO] 执行用例: 3 - 正常请求-英文问题
[2025-07-30 11:00:51,722] [INFO] 请求地址: http://localhost:8688/api/chatGatWay-internal
[2025-07-30 11:00:51,723] [INFO] 请求参数: {'message': 'What is the capital of France?', 'user_id': 'user003'}
[2025-07-30 11:00:56,087] [INFO] 执行用例: 1 - 测试GET请求
[2025-07-30 11:00:56,087] [INFO] 请求地址: https://httpbin.org/get
[2025-07-30 11:00:56,087] [INFO] 请求参数: {'key': 'value1'}
[2025-07-30 11:00:57,315] [INFO] 接口返回: {'args': {'key': 'value1'}, 'headers': {'Accept': '*/*', 'Accept-Encoding': 'gzip, deflate', 'Host': 'httpbin.org', 'User-Agent': 'python-requests/2.32.3', 'X-Amzn-Trace-Id': 'Root=1-688989a8-5ed7e7337735e259629e1c9f'}, 'origin': '58.247.23.136', 'url': 'https://httpbin.org/get?key=value1'}
[2025-07-30 11:00:57,324] [INFO] 执行用例: 2 - 测试POST请求
[2025-07-30 11:00:57,325] [INFO] 请求地址: https://httpbin.org/post
[2025-07-30 11:00:57,326] [INFO] 请求参数: {'key': 'value2'}
[2025-07-30 11:00:58,479] [INFO] 接口返回: {'args': {}, 'data': '{"key": "value2"}', 'files': {}, 'form': {}, 'headers': {'Accept': '*/*', 'Accept-Encoding': 'gzip, deflate', 'Content-Length': '17', 'Content-Type': 'application/json', 'Host': 'httpbin.org', 'User-Agent': 'python-requests/2.32.3', 'X-Amzn-Trace-Id': 'Root=1-688989a9-67d53df32d61f52312c9ca0c'}, 'json': {'key': 'value2'}, 'origin': '58.247.23.136', 'url': 'https://httpbin.org/post'}
[2025-07-30 11:00:58,490] [INFO] 执行用例: 3 - 测试带参数GET
[2025-07-30 11:00:58,491] [INFO] 请求地址: https://httpbin.org/get
[2025-07-30 11:00:58,492] [INFO] 请求参数: {'foo': 'bar'}
[2025-07-30 11:01:00,110] [INFO] 接口返回: {'args': {'foo': 'bar'}, 'headers': {'Accept': '*/*', 'Accept-Encoding': 'gzip, deflate', 'Host': 'httpbin.org', 'User-Agent': 'python-requests/2.32.3', 'X-Amzn-Trace-Id': 'Root=1-688989aa-5d05f2a6421e788e34e5f900'}, 'origin': '58.247.23.136', 'url': 'https://httpbin.org/get?foo=bar'}
[2025-07-30 11:03:22,464] [INFO] 执行用例: 1 - 正常请求-简单问题
[2025-07-30 11:03:22,465] [INFO] 请求地址: http://localhost:8688/api/chatGatWay-internal
[2025-07-30 11:03:22,465] [INFO] 请求参数: {'message': '你好，今天天气怎么样？', 'user_id': 'user001'}
[2025-07-30 11:03:27,024] [INFO] 执行用例: 2 - 异常请求-缺少message参数
[2025-07-30 11:03:27,024] [INFO] 请求地址: http://localhost:8688/api/chatGatWay-internal
[2025-07-30 11:03:27,025] [INFO] 请求参数: {'user_id': 'user002'}
[2025-07-30 11:03:31,403] [INFO] 执行用例: 3 - 正常请求-英文问题
[2025-07-30 11:03:31,404] [INFO] 请求地址: http://localhost:8688/api/chatGatWay-internal
[2025-07-30 11:03:31,404] [INFO] 请求参数: {'message': 'What is the capital of France?', 'user_id': 'user003'}
[2025-07-30 11:03:35,798] [INFO] 执行用例: 1 - 测试GET请求
[2025-07-30 11:03:35,798] [INFO] 请求地址: https://httpbin.org/get
[2025-07-30 11:03:35,799] [INFO] 请求参数: {'key': 'value1'}
[2025-07-30 11:03:37,536] [INFO] 接口返回: {'args': {'key': 'value1'}, 'headers': {'Accept': '*/*', 'Accept-Encoding': 'gzip, deflate', 'Host': 'httpbin.org', 'User-Agent': 'python-requests/2.32.3', 'X-Amzn-Trace-Id': 'Root=1-68898a47-4ac2b59e5c6b774029715e19'}, 'origin': '58.247.23.136', 'url': 'https://httpbin.org/get?key=value1'}
[2025-07-30 11:03:37,548] [INFO] 执行用例: 2 - 测试POST请求
[2025-07-30 11:03:37,549] [INFO] 请求地址: https://httpbin.org/post
[2025-07-30 11:03:37,550] [INFO] 请求参数: {'key': 'value2'}
[2025-07-30 11:03:38,693] [INFO] 接口返回: {'args': {}, 'data': '{"key": "value2"}', 'files': {}, 'form': {}, 'headers': {'Accept': '*/*', 'Accept-Encoding': 'gzip, deflate', 'Content-Length': '17', 'Content-Type': 'application/json', 'Host': 'httpbin.org', 'User-Agent': 'python-requests/2.32.3', 'X-Amzn-Trace-Id': 'Root=1-68898a49-253a5f4f7f471849608b3bef'}, 'json': {'key': 'value2'}, 'origin': '58.247.23.136', 'url': 'https://httpbin.org/post'}
[2025-07-30 11:03:38,705] [INFO] 执行用例: 3 - 测试带参数GET
[2025-07-30 11:03:38,706] [INFO] 请求地址: https://httpbin.org/get
[2025-07-30 11:03:38,707] [INFO] 请求参数: {'foo': 'bar'}
[2025-07-30 11:03:39,884] [INFO] 接口返回: {'args': {'foo': 'bar'}, 'headers': {'Accept': '*/*', 'Accept-Encoding': 'gzip, deflate', 'Host': 'httpbin.org', 'User-Agent': 'python-requests/2.32.3', 'X-Amzn-Trace-Id': 'Root=1-68898a4a-782814a74530fe9804e4edf3'}, 'origin': '58.247.23.136', 'url': 'https://httpbin.org/get?foo=bar'}
[2025-07-30 21:04:51,288] [INFO] 执行用例: 1 - 正常请求-简单问题
[2025-07-30 21:04:51,288] [INFO] 请求地址: http://localhost:8688/api/chatGatWay-internal
[2025-07-30 21:04:51,289] [INFO] 请求参数: {'message': '你好，今天天气怎么样？', 'user_id': 'user001'}
[2025-07-30 21:04:55,947] [INFO] 执行用例: 2 - 异常请求-缺少message参数
[2025-07-30 21:04:55,948] [INFO] 请求地址: http://localhost:8688/api/chatGatWay-internal
[2025-07-30 21:04:55,948] [INFO] 请求参数: {'user_id': 'user002'}
[2025-07-30 21:05:00,336] [INFO] 执行用例: 3 - 正常请求-英文问题
[2025-07-30 21:05:00,336] [INFO] 请求地址: http://localhost:8688/api/chatGatWay-internal
[2025-07-30 21:05:00,337] [INFO] 请求参数: {'message': 'What is the capital of France?', 'user_id': 'user003'}
[2025-07-30 21:05:04,739] [INFO] 执行用例: 1 - 测试GET请求
[2025-07-30 21:05:04,739] [INFO] 请求地址: https://httpbin.org/get
[2025-07-30 21:05:04,739] [INFO] 请求参数: {'key': 'value1'}
[2025-07-30 21:05:05,828] [INFO] 执行用例: 2 - 测试POST请求
[2025-07-30 21:05:05,828] [INFO] 请求地址: https://httpbin.org/post
[2025-07-30 21:05:05,828] [INFO] 请求参数: {'key': 'value2'}
[2025-07-30 21:05:06,907] [INFO] 执行用例: 3 - 测试带参数GET
[2025-07-30 21:05:06,907] [INFO] 请求地址: https://httpbin.org/get
[2025-07-30 21:05:06,908] [INFO] 请求参数: {'foo': 'bar'}
[2025-07-30 22:26:58,927] [INFO] 执行用例: 1 - 测试GET请求
[2025-07-30 22:26:58,928] [INFO] 请求地址: https://httpbin.org/get
[2025-07-30 22:26:58,928] [INFO] 请求参数: {'key': 'value1'}
[2025-07-30 22:27:00,343] [INFO] 执行用例: 2 - 测试POST请求
[2025-07-30 22:27:00,343] [INFO] 请求地址: https://httpbin.org/post
[2025-07-30 22:27:00,343] [INFO] 请求参数: {'key': 'value2'}
[2025-07-30 22:27:01,444] [INFO] 执行用例: 3 - 测试带参数GET
[2025-07-30 22:27:01,445] [INFO] 请求地址: https://httpbin.org/get
[2025-07-30 22:27:01,445] [INFO] 请求参数: {'foo': 'bar'}
[2025-07-30 22:27:33,365] [INFO] 执行用例: 1 - 测试GET请求
[2025-07-30 22:27:33,366] [INFO] 请求地址: https://jsonplaceholder.typicode.com/posts/1
[2025-07-30 22:27:33,366] [INFO] 请求参数: {}
[2025-07-30 22:27:51,441] [INFO] 接口返回: {'userId': 1, 'id': 1, 'title': 'sunt aut facere repellat provident occaecati excepturi optio reprehenderit', 'body': 'quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto'}
[2025-07-30 22:27:51,443] [INFO] 执行用例: 2 - 测试POST请求
[2025-07-30 22:27:51,443] [INFO] 请求地址: https://jsonplaceholder.typicode.com/posts
[2025-07-30 22:27:51,443] [INFO] 请求参数: {'title': 'test', 'body': 'test body', 'userId': 1}
[2025-07-30 22:27:54,042] [INFO] 接口返回: {'title': 'test', 'body': 'test body', 'userId': 1, 'id': 101}
[2025-07-30 22:27:54,044] [INFO] 执行用例: 3 - 测试带参数GET
[2025-07-30 22:27:54,045] [INFO] 请求地址: https://jsonplaceholder.typicode.com/posts
[2025-07-30 22:27:54,045] [INFO] 请求参数: {'userId': 1}
[2025-07-30 22:28:04,097] [INFO] 接口返回: [{'userId': 1, 'id': 1, 'title': 'sunt aut facere repellat provident occaecati excepturi optio reprehenderit', 'body': 'quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto'}, {'userId': 1, 'id': 2, 'title': 'qui est esse', 'body': 'est rerum tempore vitae\nsequi sint nihil reprehenderit dolor beatae ea dolores neque\nfugiat blanditiis voluptate porro vel nihil molestiae ut reiciendis\nqui aperiam non debitis possimus qui neque nisi nulla'}, {'userId': 1, 'id': 3, 'title': 'ea molestias quasi exercitationem repellat qui ipsa sit aut', 'body': 'et iusto sed quo iure\nvoluptatem occaecati omnis eligendi aut ad\nvoluptatem doloribus vel accusantium quis pariatur\nmolestiae porro eius odio et labore et velit aut'}, {'userId': 1, 'id': 4, 'title': 'eum et est occaecati', 'body': 'ullam et saepe reiciendis voluptatem adipisci\nsit amet autem assumenda provident rerum culpa\nquis hic commodi nesciunt rem tenetur doloremque ipsam iure\nquis sunt voluptatem rerum illo velit'}, {'userId': 1, 'id': 5, 'title': 'nesciunt quas odio', 'body': 'repudiandae veniam quaerat sunt sed\nalias aut fugiat sit autem sed est\nvoluptatem omnis possimus esse voluptatibus quis\nest aut tenetur dolor neque'}, {'userId': 1, 'id': 6, 'title': 'dolorem eum magni eos aperiam quia', 'body': 'ut aspernatur corporis harum nihil quis provident sequi\nmollitia nobis aliquid molestiae\nperspiciatis et ea nemo ab reprehenderit accusantium quas\nvoluptate dolores velit et doloremque molestiae'}, {'userId': 1, 'id': 7, 'title': 'magnam facilis autem', 'body': 'dolore placeat quibusdam ea quo vitae\nmagni quis enim qui quis quo nemo aut saepe\nquidem repellat excepturi ut quia\nsunt ut sequi eos ea sed quas'}, {'userId': 1, 'id': 8, 'title': 'dolorem dolore est ipsam', 'body': 'dignissimos aperiam dolorem qui eum\nfacilis quibusdam animi sint suscipit qui sint possimus cum\nquaerat magni maiores excepturi\nipsam ut commodi dolor voluptatum modi aut vitae'}, {'userId': 1, 'id': 9, 'title': 'nesciunt iure omnis dolorem tempora et accusantium', 'body': 'consectetur animi nesciunt iure dolore\nenim quia ad\nveniam autem ut quam aut nobis\net est aut quod aut provident voluptas autem voluptas'}, {'userId': 1, 'id': 10, 'title': 'optio molestias id quia eum', 'body': 'quo et expedita modi cum officia vel magni\ndoloribus qui repudiandae\nvero nisi sit\nquos veniam quod sed accusamus veritatis error'}]
[2025-07-30 22:28:32,965] [INFO] 执行用例: 1 - 测试GET请求
[2025-07-30 22:28:32,966] [INFO] 请求地址: https://jsonplaceholder.typicode.com/posts/1
[2025-07-30 22:28:32,966] [INFO] 请求参数: {}
[2025-07-30 22:28:50,754] [INFO] 接口返回: {'userId': 1, 'id': 1, 'title': 'sunt aut facere repellat provident occaecati excepturi optio reprehenderit', 'body': 'quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto'}
[2025-07-30 22:28:50,756] [INFO] 执行用例: 2 - 测试POST请求
[2025-07-30 22:28:50,756] [INFO] 请求地址: https://jsonplaceholder.typicode.com/posts
[2025-07-30 22:28:50,756] [INFO] 请求参数: {'title': 'test', 'body': 'test body', 'userId': 1}
[2025-07-30 22:29:18,117] [INFO] 执行用例: 3 - 测试带参数GET
[2025-07-30 22:29:18,118] [INFO] 请求地址: https://jsonplaceholder.typicode.com/posts/1
[2025-07-30 22:29:18,118] [INFO] 请求参数: {}
[2025-07-30 22:31:12,319] [INFO] 执行用例: 1 - 测试GET请求
[2025-07-30 22:31:12,320] [INFO] 请求地址: https://jsonplaceholder.typicode.com/posts/1
[2025-07-30 22:31:12,320] [INFO] 请求参数: {}
[2025-07-30 22:31:17,274] [INFO] 接口返回: {'userId': 1, 'id': 1, 'title': 'sunt aut facere repellat provident occaecati excepturi optio reprehenderit', 'body': 'quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto'}
[2025-07-30 22:31:17,286] [INFO] 执行用例: 2 - 测试POST请求
[2025-07-30 22:31:17,286] [INFO] 请求地址: https://jsonplaceholder.typicode.com/posts
[2025-07-30 22:31:17,287] [INFO] 请求参数: {'title': 'test', 'body': 'test body', 'userId': 1}
[2025-07-30 22:31:27,763] [INFO] 接口返回: {'title': 'test', 'body': 'test body', 'userId': 1, 'id': 101}
[2025-07-30 22:31:27,777] [INFO] 执行用例: 3 - 测试带参数GET
[2025-07-30 22:31:27,778] [INFO] 请求地址: https://jsonplaceholder.typicode.com/posts/1
[2025-07-30 22:31:27,779] [INFO] 请求参数: {}
[2025-07-30 22:31:32,122] [INFO] 接口返回: {'userId': 1, 'id': 1, 'title': 'sunt aut facere repellat provident occaecati excepturi optio reprehenderit', 'body': 'quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto'}
[2025-07-30 22:36:50,758] [INFO] 执行用例: 1 - 测试GET请求
[2025-07-30 22:36:50,758] [INFO] 请求地址: https://jsonplaceholder.typicode.com/posts/1
[2025-07-30 22:36:50,759] [INFO] 请求参数: {}
[2025-07-30 22:36:56,842] [INFO] 接口返回: {'userId': 1, 'id': 1, 'title': 'sunt aut facere repellat provident occaecati excepturi optio reprehenderit', 'body': 'quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto'}
[2025-07-30 22:36:56,856] [INFO] 执行用例: 2 - 测试POST请求
[2025-07-30 22:36:56,857] [INFO] 请求地址: https://jsonplaceholder.typicode.com/posts
[2025-07-30 22:36:56,857] [INFO] 请求参数: {'title': 'test', 'body': 'test body', 'userId': 1}
[2025-07-30 22:37:02,089] [INFO] 接口返回: {'title': 'test', 'body': 'test body', 'userId': 1, 'id': 101}
[2025-07-30 22:37:02,106] [INFO] 执行用例: 3 - 测试带参数GET
[2025-07-30 22:37:02,106] [INFO] 请求地址: https://jsonplaceholder.typicode.com/posts/1
[2025-07-30 22:37:02,107] [INFO] 请求参数: {}
[2025-07-30 22:37:06,492] [INFO] 接口返回: {'userId': 1, 'id': 1, 'title': 'sunt aut facere repellat provident occaecati excepturi optio reprehenderit', 'body': 'quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto'}
[2025-07-30 22:37:40,279] [INFO] 执行用例: 1 - 正常请求-简单问题
[2025-07-30 22:37:40,280] [INFO] 请求地址: http://localhost:8688/api/chatGatWay-internal
[2025-07-30 22:37:40,280] [INFO] 请求参数: {'message': '你好，今天天气怎么样？', 'user_id': 'user001'}
[2025-07-30 22:37:44,989] [INFO] 执行用例: 2 - 异常请求-缺少message参数
[2025-07-30 22:37:44,989] [INFO] 请求地址: http://localhost:8688/api/chatGatWay-internal
[2025-07-30 22:37:44,989] [INFO] 请求参数: {'user_id': 'user002'}
[2025-07-30 22:37:49,439] [INFO] 执行用例: 3 - 正常请求-英文问题
[2025-07-30 22:37:49,439] [INFO] 请求地址: http://localhost:8688/api/chatGatWay-internal
[2025-07-30 22:37:49,440] [INFO] 请求参数: {'message': 'What is the capital of France?', 'user_id': 'user003'}
[2025-07-30 22:37:53,965] [INFO] 执行用例: 1 - 测试GET请求
[2025-07-30 22:37:53,965] [INFO] 请求地址: https://jsonplaceholder.typicode.com/posts/1
[2025-07-30 22:37:53,965] [INFO] 请求参数: {}
[2025-07-30 22:37:57,893] [INFO] 接口返回: {'userId': 1, 'id': 1, 'title': 'sunt aut facere repellat provident occaecati excepturi optio reprehenderit', 'body': 'quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto'}
[2025-07-30 22:37:57,907] [INFO] 执行用例: 2 - 测试POST请求
[2025-07-30 22:37:57,907] [INFO] 请求地址: https://jsonplaceholder.typicode.com/posts
[2025-07-30 22:37:57,907] [INFO] 请求参数: {'title': 'test', 'body': 'test body', 'userId': 1}
[2025-07-30 22:38:11,675] [INFO] 接口返回: {'title': 'test', 'body': 'test body', 'userId': 1, 'id': 101}
[2025-07-30 22:38:11,685] [INFO] 执行用例: 3 - 测试带参数GET
[2025-07-30 22:38:11,686] [INFO] 请求地址: https://jsonplaceholder.typicode.com/posts/1
[2025-07-30 22:38:11,686] [INFO] 请求参数: {}
[2025-07-30 22:38:21,354] [INFO] 接口返回: {'userId': 1, 'id': 1, 'title': 'sunt aut facere repellat provident occaecati excepturi optio reprehenderit', 'body': 'quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto'}
[2025-07-30 22:46:31,325] [INFO] 测试文件: test_http_data
[2025-07-30 22:46:31,326] [INFO] 执行用例: 1 - 测试GET请求
[2025-07-30 22:46:31,326] [INFO] 请求地址: https://jsonplaceholder.typicode.com/posts/1
[2025-07-30 22:46:31,327] [INFO] 请求参数: {}
[2025-07-30 22:47:01,191] [INFO] 接口返回: {'userId': 1, 'id': 1, 'title': 'sunt aut facere repellat provident occaecati excepturi optio reprehenderit', 'body': 'quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto'}
[2025-07-30 22:47:01,192] [INFO] 执行用例: 2 - 测试POST请求
[2025-07-30 22:47:01,195] [INFO] 请求地址: https://jsonplaceholder.typicode.com/posts
[2025-07-30 22:47:01,196] [INFO] 请求参数: {'title': 'test', 'body': 'test body', 'userId': 1}
[2025-07-30 22:47:07,313] [INFO] 接口返回: {'title': 'test', 'body': 'test body', 'userId': 1, 'id': 101}
[2025-07-30 22:47:07,314] [INFO] 执行用例: 3 - 测试带参数GET
[2025-07-30 22:47:07,314] [INFO] 请求地址: https://jsonplaceholder.typicode.com/posts/1
[2025-07-30 22:47:07,314] [INFO] 请求参数: {}
[2025-07-30 22:47:10,111] [INFO] 接口返回: {'userId': 1, 'id': 1, 'title': 'sunt aut facere repellat provident occaecati excepturi optio reprehenderit', 'body': 'quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto'}
[2025-07-30 22:47:10,111] [INFO] 测试文件: test_chat_gateway
[2025-07-30 22:47:10,516] [INFO] 执行用例: 1 - 测试GET请求
[2025-07-30 22:47:10,517] [INFO] 请求地址: https://jsonplaceholder.typicode.com/posts/1
[2025-07-30 22:47:10,517] [INFO] 请求参数: {}
[2025-07-30 22:47:44,334] [ERROR] 测试用例执行失败: HTTPSConnectionPool(host='jsonplaceholder.typicode.com', port=443): Read timed out. (read timeout=30)
[2025-07-30 22:47:44,415] [INFO] 参数化测试 - 用例: 1 - 测试GET请求
[2025-07-30 22:47:44,415] [INFO] 请求地址: https://jsonplaceholder.typicode.com/posts/1
[2025-07-30 22:47:44,415] [INFO] 请求参数: {}
[2025-07-30 22:48:29,424] [ERROR] 参数化测试执行失败: HTTPSConnectionPool(host='jsonplaceholder.typicode.com', port=443): Read timed out. (read timeout=30)
[2025-07-30 22:48:29,439] [INFO] 参数化测试 - 用例: 2 - 测试POST请求
[2025-07-30 22:48:29,439] [INFO] 请求地址: https://jsonplaceholder.typicode.com/posts
[2025-07-30 22:48:29,440] [INFO] 请求参数: {'title': 'test', 'body': 'test body', 'userId': 1}
[2025-07-30 22:49:00,431] [ERROR] 参数化测试执行失败: HTTPSConnectionPool(host='jsonplaceholder.typicode.com', port=443): Read timed out. (read timeout=30)
[2025-07-30 22:49:00,453] [INFO] 参数化测试 - 用例: 3 - 测试带参数GET
[2025-07-30 22:49:00,453] [INFO] 请求地址: https://jsonplaceholder.typicode.com/posts/1
[2025-07-30 22:49:00,454] [INFO] 请求参数: {}
[2025-07-30 22:49:11,543] [INFO] 接口返回: {'userId': 1, 'id': 1, 'title': 'sunt aut facere repellat provident occaecati excepturi optio reprehenderit', 'body': 'quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto'}
[2025-07-30 22:49:11,563] [INFO] HTTP数据测试 - 用例: 1 - 测试GET请求
[2025-07-30 22:52:49,130] [INFO] 执行用例: 1 - 正常请求-简单问题
[2025-07-30 22:52:49,130] [INFO] 请求地址: http://localhost:8688/api/chatGatWay-internal
[2025-07-30 22:52:49,131] [INFO] 请求参数: {'message': '你好，今天天气怎么样？', 'user_id': 'user001'}
[2025-07-30 22:52:53,830] [INFO] 执行用例: 2 - 异常请求-缺少message参数
[2025-07-30 22:52:53,831] [INFO] 请求地址: http://localhost:8688/api/chatGatWay-internal
[2025-07-30 22:52:53,831] [INFO] 请求参数: {'user_id': 'user002'}
[2025-07-30 22:52:58,301] [INFO] 执行用例: 3 - 正常请求-英文问题
[2025-07-30 22:52:58,302] [INFO] 请求地址: http://localhost:8688/api/chatGatWay-internal
[2025-07-30 22:52:58,302] [INFO] 请求参数: {'message': 'What is the capital of France?', 'user_id': 'user003'}
[2025-07-30 22:53:02,838] [INFO] 测试文件: test_http_data
[2025-07-30 22:53:02,838] [INFO] 执行用例: 1 - 测试GET请求
[2025-07-30 22:53:02,838] [INFO] 请求地址: https://jsonplaceholder.typicode.com/posts/1
[2025-07-30 22:53:02,839] [INFO] 请求参数: {}
[2025-07-30 22:53:06,293] [INFO] 接口返回: {'userId': 1, 'id': 1, 'title': 'sunt aut facere repellat provident occaecati excepturi optio reprehenderit', 'body': 'quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto'}
[2025-07-30 22:53:06,294] [INFO] 执行用例: 2 - 测试POST请求
[2025-07-30 22:53:06,294] [INFO] 请求地址: https://jsonplaceholder.typicode.com/posts
[2025-07-30 22:53:06,295] [INFO] 请求参数: {'title': 'test', 'body': 'test body', 'userId': 1}
[2025-07-30 22:53:41,385] [INFO] 接口返回: {'title': 'test', 'body': 'test body', 'userId': 1, 'id': 101}
[2025-07-30 22:53:41,385] [INFO] 执行用例: 3 - 测试带参数GET
[2025-07-30 22:53:41,386] [INFO] 请求地址: https://jsonplaceholder.typicode.com/posts/1
[2025-07-30 22:53:41,386] [INFO] 请求参数: {}
[2025-07-30 22:53:58,649] [INFO] 接口返回: {'userId': 1, 'id': 1, 'title': 'sunt aut facere repellat provident occaecati excepturi optio reprehenderit', 'body': 'quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto'}
[2025-07-30 22:53:58,650] [INFO] 测试文件: test_chat_gateway
[2025-07-30 22:53:58,696] [INFO] 执行用例: 1 - 测试GET请求
[2025-07-30 22:53:58,696] [INFO] 请求地址: https://jsonplaceholder.typicode.com/posts/1
[2025-07-30 22:53:58,697] [INFO] 请求参数: {}
[2025-07-30 22:54:02,330] [INFO] 接口返回: {'userId': 1, 'id': 1, 'title': 'sunt aut facere repellat provident occaecati excepturi optio reprehenderit', 'body': 'quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto'}
[2025-07-30 22:54:02,331] [INFO] 执行用例: 2 - 测试POST请求
[2025-07-30 22:54:02,331] [INFO] 请求地址: https://jsonplaceholder.typicode.com/posts
[2025-07-30 22:54:02,332] [INFO] 请求参数: {'title': 'test', 'body': 'test body', 'userId': 1}
[2025-07-30 22:54:05,000] [INFO] 接口返回: {'title': 'test', 'body': 'test body', 'userId': 1, 'id': 101}
[2025-07-30 22:54:05,000] [INFO] 执行用例: 3 - 测试带参数GET
[2025-07-30 22:54:05,001] [INFO] 请求地址: https://jsonplaceholder.typicode.com/posts/1
[2025-07-30 22:54:05,001] [INFO] 请求参数: {}
[2025-07-30 22:54:20,449] [INFO] 接口返回: {'userId': 1, 'id': 1, 'title': 'sunt aut facere repellat provident occaecati excepturi optio reprehenderit', 'body': 'quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto'}
[2025-07-30 22:54:20,511] [INFO] 参数化测试 - 用例: 1 - 测试GET请求
[2025-07-30 22:54:20,512] [INFO] 请求地址: https://jsonplaceholder.typicode.com/posts/1
[2025-07-30 22:54:20,513] [INFO] 请求参数: {}
[2025-07-30 22:54:25,532] [INFO] 接口返回: {'userId': 1, 'id': 1, 'title': 'sunt aut facere repellat provident occaecati excepturi optio reprehenderit', 'body': 'quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto'}
[2025-07-30 22:54:25,540] [INFO] 参数化测试 - 用例: 2 - 测试POST请求
[2025-07-30 22:54:25,541] [INFO] 请求地址: https://jsonplaceholder.typicode.com/posts
[2025-07-30 22:54:25,541] [INFO] 请求参数: {'title': 'test', 'body': 'test body', 'userId': 1}
[2025-07-30 22:54:56,068] [INFO] 接口返回: {'title': 'test', 'body': 'test body', 'userId': 1, 'id': 101}
[2025-07-30 22:54:56,077] [INFO] 参数化测试 - 用例: 3 - 测试带参数GET
[2025-07-30 22:54:56,077] [INFO] 请求地址: https://jsonplaceholder.typicode.com/posts/1
[2025-07-30 22:54:56,077] [INFO] 请求参数: {}
[2025-07-30 22:55:27,953] [ERROR] 参数化测试执行失败: HTTPSConnectionPool(host='jsonplaceholder.typicode.com', port=443): Read timed out. (read timeout=30)
[2025-07-30 22:55:27,968] [INFO] HTTP数据测试 - 用例: 1 - 测试GET请求
[2025-07-30 22:55:59,864] [ERROR] HTTP数据测试执行失败: HTTPSConnectionPool(host='jsonplaceholder.typicode.com', port=443): Read timed out. (read timeout=30)
[2025-07-30 22:55:59,878] [INFO] 聊天网关测试 - 用例: 1 - 正常请求-简单问题
[2025-07-30 22:56:03,943] [ERROR] 聊天网关测试执行失败: HTTPConnectionPool(host='localhost', port=8688): Max retries exceeded with url: /api/chatGatWay-internal (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x000002EB25F89CD0>: Failed to establish a new connection: [WinError 10061] 由于目标计算机积极拒绝，无法连接。'))
[2025-07-30 22:56:03,958] [INFO] 执行用例: 1 - 测试GET请求
[2025-07-30 22:56:03,959] [INFO] 请求地址: https://jsonplaceholder.typicode.com/posts/1
[2025-07-30 22:56:03,959] [INFO] 请求参数: {}
[2025-07-30 22:56:36,427] [INFO] 接口返回: {'userId': 1, 'id': 1, 'title': 'sunt aut facere repellat provident occaecati excepturi optio reprehenderit', 'body': 'quia et suscipit\nsuscipit recusandae consequuntur expedita et cum\nreprehenderit molestiae ut ut quas totam\nnostrum rerum est autem sunt rem eveniet architecto'}
[2025-07-30 22:56:36,436] [INFO] 执行用例: 2 - 测试POST请求
[2025-07-30 22:56:36,436] [INFO] 请求地址: https://jsonplaceholder.typicode.com/posts
[2025-07-30 22:56:36,436] [INFO] 请求参数: {'title': 'test', 'body': 'test body', 'userId': 1}
[2025-07-30 22:56:42,052] [INFO] 接口返回: {'title': 'test', 'body': 'test body', 'userId': 1, 'id': 101}
[2025-07-30 22:56:42,062] [INFO] 执行用例: 3 - 测试带参数GET
[2025-07-30 22:56:42,062] [INFO] 请求地址: https://jsonplaceholder.typicode.com/posts/1
[2025-07-30 22:56:42,062] [INFO] 请求参数: {}
[2025-07-30 23:00:52,149] [INFO] 成功写入JSON文件: sample.json
[2025-07-30 23:00:52,152] [INFO] 成功加载JSON文件: sample.json
[2025-07-30 23:00:52,152] [INFO] 成功设置路径 user.profile.phone 的值为: 13800138000
[2025-07-30 23:00:52,154] [INFO] 成功保存JSON文件: sample_updated.json
[2025-07-30 23:03:37,633] [INFO] 成功写入JSON文件: test_complex.json
[2025-07-30 23:03:37,634] [INFO] 成功加载JSON文件: test_complex.json
[2025-07-30 23:03:37,635] [INFO] 成功设置路径 users[0].profile.phone 的值为: 13800138000
[2025-07-30 23:03:37,635] [INFO] 成功设置路径 settings.app.new_feature 的值为: True
[2025-07-30 23:03:37,635] [INFO] 成功设置路径 users[0].profile.addresses[2] 的值为: {'type': 'vacation', 'city': '三亚'}
[2025-07-30 23:03:37,637] [INFO] 成功删除路径 users[0].profile.phone
[2025-07-30 23:03:37,638] [INFO] 成功保存JSON文件: test_updated.json
[2025-07-30 23:03:37,640] [INFO] 成功写入JSON文件: test_simple.json
[2025-07-30 23:03:37,640] [INFO] 成功加载JSON文件: test_simple.json
[2025-07-30 23:03:37,641] [INFO] 成功加载JSON文件: test_simple.json
[2025-07-30 23:03:37,641] [INFO] 成功加载JSON文件: test_simple.json
[2025-07-30 23:03:37,641] [INFO] 成功加载JSON文件: test_simple.json
[2025-07-30 23:03:37,642] [INFO] 成功加载JSON文件: test_simple.json
[2025-07-30 23:03:37,644] [INFO] 成功写入JSON文件: test_merge1.json
[2025-07-30 23:03:37,645] [INFO] 成功写入JSON文件: test_merge2.json
[2025-07-30 23:03:37,645] [INFO] 成功加载JSON文件: test_merge1.json
[2025-07-30 23:03:37,646] [INFO] 成功加载JSON文件: test_merge2.json
[2025-07-30 23:03:37,647] [INFO] 成功写入JSON文件: test_merged.json
[2025-07-30 23:03:37,648] [INFO] 成功加载JSON文件: test_merged.json
[2025-07-30 23:03:37,649] [INFO] 成功从字符串加载JSON数据
[2025-07-30 23:33:09,061] [ERROR] RabbitMQ驱动未安装，请运行: pip install pika
[2025-07-30 23:33:09,065] [ERROR] RocketMQ驱动未安装，请运行: pip install rocketmq-client-python
[2025-07-30 23:33:09,140] [ERROR] RabbitMQ驱动未安装，请运行: pip install pika
[2025-07-30 23:33:09,141] [ERROR] RocketMQ驱动未安装，请运行: pip install rocketmq-client-python
[2025-07-30 23:34:02,967] [ERROR] RabbitMQ驱动未安装，请运行: pip install pika
[2025-07-30 23:34:02,969] [ERROR] RocketMQ驱动未安装，请运行: pip install rocketmq-client-python
[2025-07-30 23:34:03,067] [ERROR] RabbitMQ驱动未安装，请运行: pip install pika
[2025-07-30 23:34:03,111] [ERROR] RocketMQ驱动未安装，请运行: pip install rocketmq-client-python
[2025-07-30 23:34:03,150] [ERROR] RabbitMQ驱动未安装，请运行: pip install pika
[2025-07-30 23:34:03,184] [ERROR] RocketMQ驱动未安装，请运行: pip install rocketmq-client-python
[2025-07-30 23:34:03,320] [ERROR] RabbitMQ驱动未安装，请运行: pip install pika
[2025-07-30 23:34:03,325] [ERROR] RocketMQ驱动未安装，请运行: pip install rocketmq-client-python
[2025-07-30 23:34:03,339] [INFO] RabbitMQ连接已断开
[2025-07-30 23:34:03,340] [INFO] RocketMQ连接已断开
